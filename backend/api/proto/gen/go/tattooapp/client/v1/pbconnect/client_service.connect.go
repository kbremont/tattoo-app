// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: tattooapp/client/v1/client_service.proto

package pbconnect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/kbremont/tattoo-app/backend/api/proto/gen/go/tattooapp/client/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// ClientServiceName is the fully-qualified name of the ClientService service.
	ClientServiceName = "tattooapp.client.v1.ClientService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// ClientServiceCreateClientProfileProcedure is the fully-qualified name of the ClientService's
	// CreateClientProfile RPC.
	ClientServiceCreateClientProfileProcedure = "/tattooapp.client.v1.ClientService/CreateClientProfile"
	// ClientServiceGetClientProfileProcedure is the fully-qualified name of the ClientService's
	// GetClientProfile RPC.
	ClientServiceGetClientProfileProcedure = "/tattooapp.client.v1.ClientService/GetClientProfile"
	// ClientServiceDeleteClientProfileProcedure is the fully-qualified name of the ClientService's
	// DeleteClientProfile RPC.
	ClientServiceDeleteClientProfileProcedure = "/tattooapp.client.v1.ClientService/DeleteClientProfile"
)

// ClientServiceClient is a client for the tattooapp.client.v1.ClientService service.
type ClientServiceClient interface {
	CreateClientProfile(context.Context, *connect.Request[v1.CreateClientProfileRequest]) (*connect.Response[v1.CreateClientProfileResponse], error)
	GetClientProfile(context.Context, *connect.Request[v1.GetClientProfileRequest]) (*connect.Response[v1.GetClientProfileResponse], error)
	DeleteClientProfile(context.Context, *connect.Request[v1.DeleteClientProfileRequest]) (*connect.Response[v1.DeleteClientProfileResponse], error)
}

// NewClientServiceClient constructs a client for the tattooapp.client.v1.ClientService service. By
// default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses,
// and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewClientServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) ClientServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	clientServiceMethods := v1.File_tattooapp_client_v1_client_service_proto.Services().ByName("ClientService").Methods()
	return &clientServiceClient{
		createClientProfile: connect.NewClient[v1.CreateClientProfileRequest, v1.CreateClientProfileResponse](
			httpClient,
			baseURL+ClientServiceCreateClientProfileProcedure,
			connect.WithSchema(clientServiceMethods.ByName("CreateClientProfile")),
			connect.WithClientOptions(opts...),
		),
		getClientProfile: connect.NewClient[v1.GetClientProfileRequest, v1.GetClientProfileResponse](
			httpClient,
			baseURL+ClientServiceGetClientProfileProcedure,
			connect.WithSchema(clientServiceMethods.ByName("GetClientProfile")),
			connect.WithClientOptions(opts...),
		),
		deleteClientProfile: connect.NewClient[v1.DeleteClientProfileRequest, v1.DeleteClientProfileResponse](
			httpClient,
			baseURL+ClientServiceDeleteClientProfileProcedure,
			connect.WithSchema(clientServiceMethods.ByName("DeleteClientProfile")),
			connect.WithClientOptions(opts...),
		),
	}
}

// clientServiceClient implements ClientServiceClient.
type clientServiceClient struct {
	createClientProfile *connect.Client[v1.CreateClientProfileRequest, v1.CreateClientProfileResponse]
	getClientProfile    *connect.Client[v1.GetClientProfileRequest, v1.GetClientProfileResponse]
	deleteClientProfile *connect.Client[v1.DeleteClientProfileRequest, v1.DeleteClientProfileResponse]
}

// CreateClientProfile calls tattooapp.client.v1.ClientService.CreateClientProfile.
func (c *clientServiceClient) CreateClientProfile(ctx context.Context, req *connect.Request[v1.CreateClientProfileRequest]) (*connect.Response[v1.CreateClientProfileResponse], error) {
	return c.createClientProfile.CallUnary(ctx, req)
}

// GetClientProfile calls tattooapp.client.v1.ClientService.GetClientProfile.
func (c *clientServiceClient) GetClientProfile(ctx context.Context, req *connect.Request[v1.GetClientProfileRequest]) (*connect.Response[v1.GetClientProfileResponse], error) {
	return c.getClientProfile.CallUnary(ctx, req)
}

// DeleteClientProfile calls tattooapp.client.v1.ClientService.DeleteClientProfile.
func (c *clientServiceClient) DeleteClientProfile(ctx context.Context, req *connect.Request[v1.DeleteClientProfileRequest]) (*connect.Response[v1.DeleteClientProfileResponse], error) {
	return c.deleteClientProfile.CallUnary(ctx, req)
}

// ClientServiceHandler is an implementation of the tattooapp.client.v1.ClientService service.
type ClientServiceHandler interface {
	CreateClientProfile(context.Context, *connect.Request[v1.CreateClientProfileRequest]) (*connect.Response[v1.CreateClientProfileResponse], error)
	GetClientProfile(context.Context, *connect.Request[v1.GetClientProfileRequest]) (*connect.Response[v1.GetClientProfileResponse], error)
	DeleteClientProfile(context.Context, *connect.Request[v1.DeleteClientProfileRequest]) (*connect.Response[v1.DeleteClientProfileResponse], error)
}

// NewClientServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewClientServiceHandler(svc ClientServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	clientServiceMethods := v1.File_tattooapp_client_v1_client_service_proto.Services().ByName("ClientService").Methods()
	clientServiceCreateClientProfileHandler := connect.NewUnaryHandler(
		ClientServiceCreateClientProfileProcedure,
		svc.CreateClientProfile,
		connect.WithSchema(clientServiceMethods.ByName("CreateClientProfile")),
		connect.WithHandlerOptions(opts...),
	)
	clientServiceGetClientProfileHandler := connect.NewUnaryHandler(
		ClientServiceGetClientProfileProcedure,
		svc.GetClientProfile,
		connect.WithSchema(clientServiceMethods.ByName("GetClientProfile")),
		connect.WithHandlerOptions(opts...),
	)
	clientServiceDeleteClientProfileHandler := connect.NewUnaryHandler(
		ClientServiceDeleteClientProfileProcedure,
		svc.DeleteClientProfile,
		connect.WithSchema(clientServiceMethods.ByName("DeleteClientProfile")),
		connect.WithHandlerOptions(opts...),
	)
	return "/tattooapp.client.v1.ClientService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case ClientServiceCreateClientProfileProcedure:
			clientServiceCreateClientProfileHandler.ServeHTTP(w, r)
		case ClientServiceGetClientProfileProcedure:
			clientServiceGetClientProfileHandler.ServeHTTP(w, r)
		case ClientServiceDeleteClientProfileProcedure:
			clientServiceDeleteClientProfileHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedClientServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedClientServiceHandler struct{}

func (UnimplementedClientServiceHandler) CreateClientProfile(context.Context, *connect.Request[v1.CreateClientProfileRequest]) (*connect.Response[v1.CreateClientProfileResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("tattooapp.client.v1.ClientService.CreateClientProfile is not implemented"))
}

func (UnimplementedClientServiceHandler) GetClientProfile(context.Context, *connect.Request[v1.GetClientProfileRequest]) (*connect.Response[v1.GetClientProfileResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("tattooapp.client.v1.ClientService.GetClientProfile is not implemented"))
}

func (UnimplementedClientServiceHandler) DeleteClientProfile(context.Context, *connect.Request[v1.DeleteClientProfileRequest]) (*connect.Response[v1.DeleteClientProfileResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("tattooapp.client.v1.ClientService.DeleteClientProfile is not implemented"))
}
